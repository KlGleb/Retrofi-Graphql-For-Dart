# noinspection GraphQLInterfaceImplementation
scalar Long
interface BasicEntity {
    id: ID!
    creationDate: Long!
    lastUpdate: Long!
}

type Query {
    patientList(pageInfo: PageInfo!): [Patient!]!
    medicalStaffList : [MedicalStaff!]!
    hemodialysisGroupList(pageInfo:PageInfo!) :[HemodialysisGroup!]!
    findPatientById (id: ID!): Patient!
    agencyList(pageInfo:PageInfo!):[Agency!]!
    positionList(pageInfo: PageInfo!): [Position!]!
}
type Mutation {
    savePatient(input : PatientInput) : Patient
    saveHemodialysisGroup(input:HemodialysisGroupInput):HemodialysisGroup
    savePosition(position :PositionInput) : Position
    saveMedicalStaff(medicalStaff :MedicalStaffInput) : MedicalStaff!
}
type Agency implements BasicEntity{
    designation:String
    cashierId:String
    address:String
    phones:[String!]!
    email:String
    webSite:String
        id: ID!
    creationDate: Long!
    lastUpdate: Long!
}
type Cashier implements BasicEntity{
    code:String
    designation:String
    address:String
    phones:[String!]!
    emails:[String!]
    webSite:[String!]!
        id: ID!
    creationDate: Long!
    lastUpdate: Long!
}
type Patient implements BasicEntity{
    PersonalInfo:PersonalInfo
    patientStatus:String
    admissionDate:Long!
    ensurer:Ensurer
    assignment:Assignment
        id: ID!
    creationDate: Long!
    lastUpdate: Long!
}
type HemodialysisGroup implements BasicEntity{
    code : String
    designation :String
    daysOfWeek : [String!]!
        id: ID!
    creationDate: Long!
    lastUpdate: Long!

}
type Position implements BasicEntity{
        id: ID!
    creationDate: Long!
    lastUpdate: Long!
    designation:String
    startTime:Long
    endTime: Long

}


type MedicalStaff implements BasicEntity{
    PersonalInfo:PersonalInfo!
    rank:Rank
        id: ID!
    creationDate: Long!
    lastUpdate: Long!
}

input AgencyInput{
    id:ID
    designation:String
    cashierId:String
    address:String
    phones:[String!]!
    email:String
    webSite:String
}

input CashierInput {
    id:ID
    code:String
    designation:String
    address:String
    phones:[String!]!
    emails:[String!]!
    webSite:[String!]!
}
type PayerCenter{
    code:String
    designation:String
    address:String
    phones:[String!]!
    emails:[String!]!
    webSite:String
}

type PersonalInfo{
    firstName:String!
    lastName:String!
    gender:Gender!
    dateOfBirth:Long!
    placeOfBirth:String
    bloodGroup :BloodGroup
    image:String
    address:String
    phones:[String!]!
    emails:[String!]!
}
input PersonalInfoInput{
    id:ID
    firstName:String!
    lastName:String!
    gender:Gender!
    dateOfBirth:Long!
    placeOfBirth:String
    bloodGroup :BloodGroup
    image:String
    address:String
    phones:[String!]!
    emails:[String!]!
}


input PatientInput{
    id:ID
    personalInfo:PersonalInfoInput
    patientStatus:PatientStatus
    admissionDate:Long!
    ensurer:EnsurerInput
    assignment:AssignmentInput

}

input HemodialysisGroupInput{
    id: ID
    creationDate:Long
    lastUpdate:Long
    code : String
    designation :String
    daysOfWeek : [String!]!
}

type Assignment{
    medicalStaff:MedicalStaff
    hemodialysisGroup:HemodialysisGroup
    position:Position
    patientRoom:PatientRoom
    DateOfFirstIronTreatment:Long
    DateOfFirstEPOTreatment:Long
    DateOfTheFirstHemodialysisSession:Long
}
input AssignmentInput{
    id:ID
    medicalStaff:EnsurerInput
    hemodialysisGroup:HemodialysisGroupInput
    position:PositionInput
    patientRoom:PatientRoomInput
    DateOfFirstIronTreatment:Long
    DateOfFirstEPOTreatment:Long
    DateOfTheFirstHemodialysisSession:Long
}

input PatientRoomInput{
    id:ID
    code:String
    name:String
    designation:String
}
type PatientRoom{
    code:String
    name:String
    designation:String
}

input PositionInput{
    id: ID
    designation:String
    startTime:Long
    endTime: Long
}

type Ensurer{
    PersonalInfo:PersonalInfo
    socialSecurityNumber:String!
    ensurerRelationship:EnsurerRelationship
}

input EnsurerInput{
    id:ID
    person:PersonalInfoInput
    socialSecurityNumber:String
    ensurerRelationship:EnsurerRelationship
}

input PageInfo {
    page: Int!
    size: Int!
}

input MedicalStaffInput{
    id: ID
    PersonalInfo:PersonalInfoInput
    rank:Rank
}

enum Gender{
    MAN
    WOMAN
}

enum Rank{
    DOCTOR,NURSE,TECHNICIAN
}

enum BloodGroup{
    A_POSITIF
    A_NEGATIF
    B_POSITIF
    B_NEGATIF
    AB_POSITIF
    AB_NEGATIF
    O_POSITIF
    O_NEGATIF
}

enum EnsurerRelationship{
    PATIENT,CHILD, ANCESTOR, PARTNER, OTHER
}
enum  PatientStatus{
    PERMANANTE
}
query hemodialysisGroupList($pageInfo: PageInfo!){
  hemodialysisGroupList(pageInfo: $pageInfo){
    id designation
  }
}
mutation savePosition($input: PositionInput!, $ginput: HemodialysisGroupInput!){
  savePosition(position:$input){
    startTime 
  }
  saveHemodialysisGroup(input:$ginput) {
    id
  }
}