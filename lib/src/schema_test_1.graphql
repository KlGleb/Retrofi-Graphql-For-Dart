# noinspection GraphQLInterfaceImplementation,GraphQLTypeRedefinition
scalar Long
interface BasicEntity {
    id: ID!
    creationDate: Long!
    lastUpdate: Long!
}

type Query {
    patientList(pageInfo: PageInfo!): [Patient!]!
    medicalStaffList : [MedicalStaff!]!
    hemodialysisGroupList(pageInfo:PageInfo!) :[HemodialysisGroup!]!
    findPatientById (id: ID!): Patient!
    agencyList(pageInfo:PageInfo!):[Agency!]!
    findAgencyById(id:ID!):Agency!
    findCashierById(id:ID!):Cashier!
    cashierList(pageInfo:PageInfo!):[Cashier]
    positionList(pageInfo:PageInfo!):[Position!]!
}
type Mutation {
    saveAgency(input : AgencyInput!):Agency!
    savePatient(input : PatientInput!) : Patient!
    saveHemodialysisGroup(input:HemodialysisGroupInput!):HemodialysisGroup!
    savePosition(position :PositionInput!) : Position!
    saveMedicalStaff(medicalStaff :MedicalStaffInput!) : MedicalStaff!
    deleteAgencyById(id:ID!): Agency
    saveCashier(input:CashierInput!):Cashier!
}

type Subscription {
    positions: Position!
}

type Agency implements BasicEntity{
    id: ID!
    creationDate: Long!
    lastUpdate: Long!
    designation:String!
    cashierId:String!
    address:String!
    phones:[String!]!
    emails:[String!]!
    webSite:String
}
type Cashier implements BasicEntity{
    id: ID!
    creationDate: Long!
    lastUpdate: Long!
    code:String!
    designation:String!
    address:String!
    phones:[String!]!
    emails:[String!]
    webSite:[String!]!
}
type Patient implements BasicEntity{
    id: ID!
    creationDate: Long!
    lastUpdate: Long!
    personalInfo:PersonalInfo!
    patientStatus:String!
    admissionDate:Long!
    ensurer:Ensurer!
    assignment:Assignment!
}
type HemodialysisGroup implements BasicEntity{
    id: ID!
    creationDate: Long!
    lastUpdate: Long!
    code: String!
    designation:String!
    daysOfWeek: [String!]!

}
type Position implements BasicEntity{
    id: ID!
    creationDate: Long!
    lastUpdate: Long!
    designation:String!
    startTime:Long!
    endTime: Long!
}


type MedicalStaff implements BasicEntity{
    id: ID!
    creationDate: Long!
    lastUpdate: Long!
    PersonalInfo:PersonalInfo!
    rank:Rank!
}

input AgencyInput{
    id:ID
    designation:String!
    cashierId:String!
    address:String!
    phones:[String!]!
    emails:[String!]!
    webSite:String!
}


input CashierInput {
    id:ID
    code:String!
    designation:String!
    address:String!
    phones:[String!]!
    emails:[String!]!
    webSite:[String!]!
}
type PayerCenter{
    id: ID!
    creationDate: Long!
    lastUpdate: Long!
    code:String!
    designation:String!
    address:String!
    phones:[String!]!
    emails:[String!]!
    webSite:String!
}

type PersonalInfo{
    firstName:String!
    lastName:String!
    gender:Gender!
    dateOfBirth:Long!
    placeOfBirth:String!
    bloodGroup :BloodGroup!
    image:String!
    address:String!
    phones:[String!]!
    emails:[String!]!
}
input PersonalInfoInput{
    id:ID
    firstName:String!
    lastName:String!
    gender:Gender!
    dateOfBirth:Long!
    placeOfBirth:String!
    bloodGroup :BloodGroup!
    image:String!
    address:String!
    phones:[String!]!
    emails:[String!]!
}

input PatientInput{
    id:ID
    personalInfo:PersonalInfoInput!
    patientStatus:PatientStatus!
    admissionDate:Long!
    ensurer:EnsurerInput!
    assignment:AssignmentInput!

}

input HemodialysisGroupInput{
    id: ID
    code : String!
    designation :String!
    daysOfWeek : [String!]!
}

type Assignment{
    medicalStaff:MedicalStaff!
    hemodialysisGroup:HemodialysisGroup!
    position:Position!
    patientRoom:PatientRoom!
    dateOfFirstIronTreatment:Long!
    dateOfFirstEPOTreatment:Long!
    dateOfTheFirstHemodialysisSession:Long!
}
input AssignmentInput{
    id:ID
    medicalStaff:EnsurerInput!
    hemodialysisGroup:HemodialysisGroupInput!
    position:PositionInput!
    patientRoom:PatientRoomInput!
    dateOfFirstIronTreatment:Long!
    dateOfFirstEPOTreatment:Long!
    dateOfTheFirstHemodialysisSession:Long!
}

input PatientRoomInput{
    id:ID
    code:String!
    name:String!
    designation:String!
}
type PatientRoom{
    code:String!
    name:String!
    designation:String!
}

input PositionInput{
    id: ID
    designation:String!
    startTime:Long!
    endTime: Long!
}

type Ensurer{
    personalInfo:PersonalInfo!
    socialSecurityNumber:String!
    ensurerRelationship:EnsurerRelationship!
}

input EnsurerInput{
    id:ID
    person:PersonalInfoInput!
    socialSecurityNumber:String!
    ensurerRelationship:EnsurerRelationship!
}

input PageInfo {
    page: Int!
    size: Int!
}

input MedicalStaffInput{
    id: ID
    PersonalInfo:PersonalInfoInput!
    rank:Rank!
}

enum Gender{
    MAN
    WOMAN
}

enum Rank{
    DOCTOR,NURSE,TECHNICIAN
}

enum BloodGroup{
    A_POSITIF
    A_NEGATIF
    B_POSITIF
    B_NEGATIF
    AB_POSITIF
    AB_NEGATIF
    O_POSITIF
    O_NEGATIF
}

enum EnsurerRelationship{
    PATIENT,CHILD, ANCESTOR, PARTNER, OTHER
}
enum  PatientStatus{
    PERMANANTE
}


query hemodialysisGroupList($pageInfo: PageInfo!){
  hemodialysisGroupList(pageInfo: $pageInfo){
    id designation
  }
}
mutation savePosition($input: PositionInput!, $ginput: HemodialysisGroupInput!){
  savePosition(position:$input){
    startTime endTime
  }
  saveHemodialysisGroup(input:$ginput) {
    id 
  }
}